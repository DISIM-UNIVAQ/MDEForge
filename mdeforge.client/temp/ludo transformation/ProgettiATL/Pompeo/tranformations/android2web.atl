-- @path WebAppMM=/Android2Web/meta-model/WebAppMM.ecore
-- @path AndroidAppMM=/Android2Web/meta-model/AndroidAppMM.ecore


module android2web;
create OUT: WebAppMM from IN: AndroidAppMM;

helper def: application: WebAppMM!Application =
	OclUndefined;

rule AndroidApp2WebApp {
	from
		androidApp: AndroidAppMM!Application
	to
		webApp: WebAppMM!WebApplication (
			domainElements <- androidApp.domainElements,
			navigable <- androidApp.invoked,
			name <- androidApp.name
		)
	do{
		 -- saves in the helper the application name
		thisModule.application <- webApp;
		}
}

rule Invokable2Navigable {
	from
		androidInvokable: AndroidAppMM!Invokable (
			(not androidInvokable.oclIsTypeOf(AndroidAppMM!Activity)) and (not
					androidInvokable.oclIsTypeOf(AndroidAppMM!Service)) and (not
					androidInvokable.oclIsTypeOf(AndroidAppMM!SystemService)) and (not
					androidInvokable.oclIsTypeOf(AndroidAppMM!CustomService))
		)
	to
		webNavigable: WebAppMM!Navigable (
			application <- thisModule.application,
			name <- androidInvokable.name,
			url <- androidInvokable.itemID
		)
}

rule Activity2Controller {
	from
		androidActivity: AndroidAppMM!Activity (
			androidActivity.oclIsTypeOf(AndroidAppMM!Activity)
		)
	to
		webController: WebAppMM!Controller (
			application <- thisModule.application,
			name <- androidActivity.name,
			page <- androidActivity.graphicElements,
			url <- 'www.'.concat(thisModule.application.name).concat('.com?itemid=').
					concat(androidActivity.itemID)
		)
}

rule AndroidGE2WebWidget {
	from
		androidGE: AndroidAppMM!GraphicElement (
			not androidGE.oclIsTypeOf(AndroidAppMM!Template)
		)
	to
		webWidget: WebAppMM!Widget (
			name <- androidGE.name
		)
}

rule Template2Page {
	from
		androidTemplate: AndroidAppMM!Template
	to
		page: WebAppMM!Page (
			name <- androidTemplate.name,
			widgets <- androidTemplate.graphicsElements
		)
}

rule AndroidDomainElement2WebDomainElement {
	from
		androidDE: AndroidAppMM!DomainElement
	to
		webDE: WebAppMM!DomainElement (
			name <- androidDE.name
		)
}
