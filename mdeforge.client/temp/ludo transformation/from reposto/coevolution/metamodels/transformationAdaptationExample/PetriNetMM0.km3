-- @name		PetriNet
-- @version		1.0
-- @domains		Petri net
-- @authors		Pierrick Guyard (pielepsy@gmail.com)
-- @date		2005/06/29
-- @description		This basic metamodel describes Petri Net. It's consists of places, transitions and directed arcs that connect them, so arcs run between places and transitions, not between places and places or transitions and transitions.  There is two sorts of arcs : the ones which connect places with transitions, and the other start at a transition and end at a place.


package PetriNetMM0 {

	abstract class LocatedElement {
		attribute location : String;
	}
	
	
	class PetriNetModelElement{
		reference modelContainer : PetriNetModel oppositeOf elements;
		
	}	
	
	class PetriNetModel{
		reference elements[*] container : PetriNetModelElement oppositeOf modelContainer;
		
	}
	-- @comment top element
	class Net extends LocatedElement{
		attribute name : String;
		reference places[*] container : Place oppositeOf net;
		reference transitions[*] container : Transition oppositeOf net;
		
	}
	
	-- @begin elements
	
	
	
	class Place extends LocatedElement{
		attribute name : String;
		reference net : Net oppositeOf places;
		reference src[*] : Transition oppositeOf dst;
		reference dst[*] : Transition oppositeOf src;
	}
	
	class Transition  extends LocatedElement{
		attribute name : String;
		reference net : Net oppositeOf transitions;
		reference src[*] : Place oppositeOf dst;
		reference dst[*] : Place oppositeOf src;
	}
	
	-- @end elements
	
}

package PrimitiveTypes {
	datatype String;
	datatype Integer;
}