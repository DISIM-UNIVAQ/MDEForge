-- @nsURI PetriNetMM0=PetriNetMM0
-- @nsURI XML=XML

module PetriNet_2_XML; -- Module Template
create OUT : PNML from  IN : PetriNetMM0;


helper def: counter : Integer =
	0
	;


helper context PetriNetMM0!Transition def: createArcsSrc(parent:PNML!NetElement): PNML!Arc=
	
	self.src->iterate(e; res : PNML!Arc=OclUndefined|
	thisModule.createArcSrc(e,parent,self)
	)
	
	;
helper context PetriNetMM0!Transition def: createArcsTrs(parent:PNML!NetElement): PNML!Arc=
	
	self.dst->iterate(e; res : PNML!Arc=OclUndefined|
	thisModule.createArcTrs(self,parent,e)
	)
	
	;

rule createArcSrc(s:PetriNetMM0!Place,parent_element:PNML!NetElement,target_transition:PetriNetMM0!Transition){
	to t: PNML!Arc(
	id <- thisModule.counter.toString()	,
		name<-name,
		net<-parent_element,		
			--,
			source <- s,
			target <- target_transition
		)
		,
		name : PNML!Name
		(
			
			labels <- label
		),
		label : PNML!Label
		(
				labeledElement<-name,
			text <- s.name+'_to_'+target_transition.name
		)	
		
	do{
		thisModule.counter<-thisModule.counter+1;
		t;
	}
}

rule createArcTrs(s:PetriNetMM0!Transition,parent_element:PNML!NetElement,target_place:PetriNetMM0!Place){
	to t: PNML!Arc(
		id <- thisModule.counter.toString(),
		name<-name,
		net<-parent_element,
		source <- s,
		target <- target_place
	)
	,
		name : PNML!Name
		(
			
			labels <- label
		),
		label : PNML!Label
		(
			labeledElement<-name,
			text <- s.name+'_to_'+target_place.name
		)	

	do{
		thisModule.counter<-thisModule.counter+1;
		t;
	}
}

helper context PetriNetMM0!Net def: totPlace() : String=
	self.places->select(e|e.oclIsTypeOf(PetriNetMM0!Place)).size().toString()
	;
helper context PetriNetMM0!Net def: totTransition() : String=
	self.transitions->select(e|e.oclIsTypeOf(PetriNetMM0!Transition)).size().toString()
	;




helper def: root: PNML!PNMLDocument=
	OclUndefined

	;



rule PNMLDocument{
	from s:   PetriNetMM0!PetriNetModel
		to t: PNML!PNMLDocument(
	xmlns <- uri
	),
	uri : PNML!URI
		(
			value <- 'http://www.informatik.hu-berlin.de/top/pnml/ptNetb'
)
	do{
		thisModule.document<-t;
	}
}

rule Net {
	from s: PetriNetMM0!Net
	to t: PNML!NetElement  (
		name<-name,
		document<-thisModule.document,
		contents <-  s.places.union(s.transitions),
		type <- type_uri,
		id<-s.name
		),
	name : PNML!Name
		(
			labels <- label
		),
	label : PNML!Label
		(
			text <- s.name
		),
	type_uri : PNML!URI
		(
			value <- 'http://www.informatik.hu-berlin.de/top/pntd/ptNetb'
		)

	do{
		thisModule.document.nets<-t;
	}
}

rule Place {
	from s: PetriNetMM0!Place(s.oclIsTypeOf(PetriNetMM0!Place))
	to t: PNML!Place(
			name <- name,
			id <-  
			s.name+'_src:'+s.src.size().toString()+'_dst:'+
			s.dst.size().toString()

		),
		name : PNML!Name
		(
			
		),
		label : PNML!Label
		(
			text <- s.name+'_src:'+s.src.size().toString()+'_dst:'+
			s.dst.size().toString(),
			labeledElement<-name
		)

}

rule Transitions{
	from s: PetriNetMM0!Transition
	to t: PNML!Transition(		
			name <- name,
			id <- s.name+'_dst:'+s.dst.size().toString()
	

	),
		name : PNML!Name
		(
			
		),
		label : PNML!Label
		(
			text <- s.name+'_dst:'+s.dst.size().toString(),
			labeledElement<-name
		)
	
	do{
	s.createArcsSrc(t.net);
	s.createArcsTrs(t.net);
}
	
}






