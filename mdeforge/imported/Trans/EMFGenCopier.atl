-- @atlcompiler atl2006
-- Generated by: $Id$
module EModelCopy;

create OUT : OUTMODEL from IN : INMODEL;

helper def : inElements : Set(INMODEL!"ecore::EObject") = INMODEL!"ecore::EObject".allInstancesFrom('IN');

rule GenModel {
 from s : INMODEL!GenModel (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenModel (
 copyrightText <- s.copyrightText,
 modelDirectory <- s.modelDirectory,
 creationCommands <- s.creationCommands,
 creationIcons <- s.creationIcons,
 creationSubmenus <- s.creationSubmenus,
 editDirectory <- s.editDirectory,
 editorDirectory <- s.editorDirectory,
 modelPluginID <- s.modelPluginID,
 templateDirectory <- s.templateDirectory,
 runtimeJar <- s.runtimeJar,
 foreignModel <- s.foreignModel,
 dynamicTemplates <- s.dynamicTemplates,
 redirection <- s.redirection,
 forceOverwrite <- s.forceOverwrite,
 nonExternalizedStringTag <- s.nonExternalizedStringTag,
 modelName <- s.modelName,
 modelPluginClass <- s.modelPluginClass,
 editPluginClass <- s.editPluginClass,
 editorPluginClass <- s.editorPluginClass,
 updateClasspath <- s.updateClasspath,
 generateSchema <- s.generateSchema,
 nonNLSMarkers <- s.nonNLSMarkers,
 staticPackages <- s.staticPackages,
 modelPluginVariables <- s.modelPluginVariables,
 rootExtendsInterface <- s.rootExtendsInterface,
 rootExtendsClass <- s.rootExtendsClass,
 rootImplementsInterface <- s.rootImplementsInterface,
 suppressEMFTypes <- s.suppressEMFTypes,
 suppressEMFMetaData <- s.suppressEMFMetaData,
 suppressEMFModelTags <- s.suppressEMFModelTags,
 suppressInterfaces <- s.suppressInterfaces,
 featureMapWrapperInterface <- s.featureMapWrapperInterface,
 featureMapWrapperInternalInterface <- s.featureMapWrapperInternalInterface,
 featureMapWrapperClass <- s.featureMapWrapperClass,
 runtimeCompatibility <- s.runtimeCompatibility,
 richClientPlatform <- s.richClientPlatform,
 codeFormatting <- s.codeFormatting,
 testsDirectory <- s.testsDirectory,
 testSuiteClass <- s.testSuiteClass,
 booleanFlagsField <- s.booleanFlagsField,
 booleanFlagsReservedBits <- s.booleanFlagsReservedBits,
 importerID <- s.importerID,
 bundleManifest <- s.bundleManifest,
 featureDelegation <- s.featureDelegation,
 containmentProxies <- s.containmentProxies,
 minimalReflectiveMethods <- s.minimalReflectiveMethods,
 suppressContainment <- s.suppressContainment,
 suppressNotification <- s.suppressNotification,
 arrayAccessors <- s.arrayAccessors,
 suppressUnsettable <- s.suppressUnsettable,
 facadeHelperClass <- s.facadeHelperClass,
 complianceLevel <- s.complianceLevel,
 suppressGenModelAnnotations <- s.suppressGenModelAnnotations,
 copyrightFields <- s.copyrightFields,
 binaryCompatibleReflectiveMethods <- s.binaryCompatibleReflectiveMethods,
 publicConstructors <- s.publicConstructors,
 templatePluginVariables <- s.templatePluginVariables,
 providerRootExtendsClass <- s.providerRootExtendsClass,
 editPluginID <- s.editPluginID,
 editPluginVariables <- s.editPluginVariables,
 editorPluginID <- s.editorPluginID,
 editorPluginVariables <- s.editorPluginVariables,
 testsPluginID <- s.testsPluginID,
 testsPluginVariables <- s.testsPluginVariables,
 optimizedHasChildren <- s.optimizedHasChildren,
 tableProviders <- s.tableProviders,
 colorProviders <- s.colorProviders,
 fontProviders <- s.fontProviders,
 runtimeVersion <- s.runtimeVersion,
 language <- s.language,
 packedEnums <- s.packedEnums,
 interfaceNamePattern <- s.interfaceNamePattern,
 classNamePattern <- s.classNamePattern,
 genAnnotations <- s.genAnnotations,
 genPackages <- s.genPackages,
 usedGenPackages <- s.usedGenPackages)
}

rule GenPackage {
 from s : INMODEL!GenPackage (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenPackage (
 prefix <- s.prefix,
 basePackage <- s.basePackage,
 resource <- s.resource,
 disposableProviderFactory <- s.disposableProviderFactory,
 adapterFactory <- s.adapterFactory,
 loadInitialization <- s.loadInitialization,
 interfacePackageSuffix <- s.interfacePackageSuffix,
 metaDataPackageSuffix <- s.metaDataPackageSuffix,
 classPackageSuffix <- s.classPackageSuffix,
 utilityPackageSuffix <- s.utilityPackageSuffix,
 providerPackageSuffix <- s.providerPackageSuffix,
 presentationPackageSuffix <- s.presentationPackageSuffix,
 testsPackageSuffix <- s.testsPackageSuffix,
 generateExampleClass <- s.generateExampleClass,
 literalsInterface <- s.literalsInterface,
 dataTypeConverters <- s.dataTypeConverters,
 multipleEditorPages <- s.multipleEditorPages,
 generateModelWizard <- s.generateModelWizard,
 extensibleProviderFactory <- s.extensibleProviderFactory,
 childCreationExtenders <- s.childCreationExtenders,
 contentTypeIdentifier <- s.contentTypeIdentifier,
 fileExtensions <- s.fileExtensions,
 genAnnotations <- s.genAnnotations,
 ecorePackage <- s.ecorePackage,
 genEnums <- s.genEnums,
 genDataTypes <- s.genDataTypes,
 genClasses <- s.genClasses,
 nestedGenPackages <- s.nestedGenPackages)
}

rule GenClass {
 from s : INMODEL!GenClass (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenClass (
 provider <- s.provider,
 image <- s.image,
 dynamic <- s.dynamic,
 genAnnotations <- s.genAnnotations,
 genTypeParameters <- s.genTypeParameters,
 ecoreClass <- s.ecoreClass,
 genFeatures <- s.genFeatures,
 genOperations <- s.genOperations,
 labelFeature <- s.labelFeature)
}

rule GenFeature {
 from s : INMODEL!GenFeature (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenFeature (
 property <- s.property,
 notify <- s.notify,
 children <- s.children,
 createChild <- s.createChild,
 propertyCategory <- s.propertyCategory,
 propertyFilterFlags <- s.propertyFilterFlags,
 propertyDescription <- s.propertyDescription,
 propertyMultiLine <- s.propertyMultiLine,
 propertySortChoices <- s.propertySortChoices,
 genAnnotations <- s.genAnnotations,
 ecoreFeature <- s.ecoreFeature)
}

rule GenEnum {
 from s : INMODEL!GenEnum (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenEnum (
 typeSafeEnumCompatible <- s.typeSafeEnumCompatible,
 genAnnotations <- s.genAnnotations,
 genTypeParameters <- s.genTypeParameters,
 ecoreDataType <- s.ecoreDataType,
 ecoreEnum <- s.ecoreEnum,
 genEnumLiterals <- s.genEnumLiterals)
}

rule GenEnumLiteral {
 from s : INMODEL!GenEnumLiteral (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenEnumLiteral (
 genAnnotations <- s.genAnnotations,
 ecoreEnumLiteral <- s.ecoreEnumLiteral)
}

rule GenDataType {
 from s : INMODEL!GenDataType (
 if thisModule.inElements->includes(s) then
 s.oclIsTypeOf(INMODEL!GenDataType)
 else false endif)
 to t : OUTMODEL!GenDataType (
 genAnnotations <- s.genAnnotations,
 genTypeParameters <- s.genTypeParameters,
 ecoreDataType <- s.ecoreDataType)
}

rule GenOperation {
 from s : INMODEL!GenOperation (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenOperation (
 genAnnotations <- s.genAnnotations,
 ecoreOperation <- s.ecoreOperation,
 genParameters <- s.genParameters,
 genTypeParameters <- s.genTypeParameters)
}

rule GenParameter {
 from s : INMODEL!GenParameter (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenParameter (
 genAnnotations <- s.genAnnotations,
 ecoreParameter <- s.ecoreParameter)
}

rule GenAnnotation {
 from s : INMODEL!GenAnnotation (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenAnnotation (
 source <- s.source,
 genAnnotations <- s.genAnnotations,
 details <- s.details,
 references <- s.references,
 contents <- s.contents)
}

rule GenTypeParameter {
 from s : INMODEL!GenTypeParameter (thisModule.inElements->includes(s))
 to t : OUTMODEL!GenTypeParameter (
 genAnnotations <- s.genAnnotations,
 ecoreTypeParameter <- s.ecoreTypeParameter)
}

