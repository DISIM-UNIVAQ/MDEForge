-- @path REMM=/crm2re/model/metamodels/RealEstateMM.ecore
-- @path CRMMM=/crm2re/model/metamodels/CRMMM.ecore

module crm2re;
create OUT : REMM from IN : CRMMM;

helper context CRMMM!CRMPerson def: isCustomer() : Boolean =
	if not self.oclIsTypeOf(CRMMM!Customer) then true
	else false
	endif;

helper context CRMMM!Contact def: contactType: String =
	if self.type.toString() = 'email' then self.type.toString()
	else 
		if self.type.toString() = 'call' then self.type.toString()
		else
			'other'
		endif
	endif;

helper def: rename: CRMMM!CRMModel=OclUndefined;

rule CRMModel2RealEstateModel{
	from
		s: CRMMM!CRMModel
	to
		c: REMM!RealEstateModel(
			name<-s.name	
		)
	do{
		thisModule.rename<-c;	
	}
}

rule Person2Customer{
	from
		s: CRMMM!CRMPerson (not s.isCustomer())
	to
		c: REMM!Customer(
			firstname <- s.firstName,
			lastname <- s.lastName,
			QoS <- s.LS,
			remodel <- thisModule.rename
		)
}

rule Person2SystemUser{
	from
		s: CRMMM!CRMPerson (s.isCustomer())
	to
		c: REMM!SystemUser(
			firstname <- s.firstName,
			lastname <- s.lastName,
			username <- s.login,
			role <- 'Undefined',
			remodel <- thisModule.rename
		)
}

rule Contact2Deal{
	from
		s: CRMMM!Contact 
	to 
		c: REMM!Deal(
			date <- s.date,
			details <- s.text,
			amount <- 0.0,
			status <- 'standBy',
			customer <- s.customer,
			systemuser <- s.registeredUser,
			type <- s.contactType,
			name <- s.id,
			remodel <- thisModule.rename
		)
}